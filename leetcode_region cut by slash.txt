class Solution {
    public static int find(int[] P,int x){
        if(P[x]==x){
            return x;
        }
        int temp=find(P,P[x]);
        P[x]=temp;
        return temp;
    }
    public static void union(int rank[],int[] P,int x,int y){
        int px=find(P,x);
        int py=find(P,y);
        if(rank[px]>rank[py]){
            P[py]=px;
        }
        else if(rank[px]<rank[py]){
            P[px]=py;
        }
        else{
            P[px]=py;
            rank[py]++;
        }
    }
    public static void printing(int[] arr){
        for(int j=0;j<arr.length;j++){
            System.out.print(arr[j]);
        }
        System.out.println();
    }
    public int regionsBySlashes(String[] grid) {
        //System.out.println((grid.length+1)+" "+(grid[2].length()));
        int dp[]=new int[(grid.length+1)*(grid[0].length()+1)];
        System.out.println(dp.length);
        int rank[]=new int[(grid.length+1)*(grid[0].length()+1)];
        for(int j=0;j<dp.length;j++){
            rank[j]=1;
            dp[j]=j;
        }
        for(int i=0;i<grid[0].length()+1;i++){
            union(rank,dp,0,i);
            
        }
        printing(dp);
        for(int i=0;i<grid.length+1;i++){
            union(rank,dp,0,(i*(grid.length+1))+0);
            
        }
        
        printing(dp);
        for(int i=0;i<grid[0].length()+1;i++){
            union(rank,dp,0,(grid.length)*(grid.length+1)+i);
            
        }
        printing(dp);
        for(int i=0;i<grid[0].length()+1;i++){
            union(rank,dp,0,i*(grid.length+1)+(grid.length));
            
        }
        printing(dp);
        for(int j=0;j<dp.length;j++){
            System.out.print(dp[j]+" ");
        }
        System.out.println();
        int count=1;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[i].length();j++){
                if(grid[i].charAt(j)=='/'){
                    if(find(dp,((i+1)*grid.length+1)+j)==find(dp,(i*grid.length)+j+1)){
                        count+=1;
                    }
                    union(rank,dp,(i+1*grid.length+1)+j,(i*grid.length+1)+j+1);
                    
                }
                else if(grid[i].charAt(j)=='\\'){
                    if(find(dp,((i+1)*grid.length)+j)==find(dp,(i*grid.length)+(j+1))){
                            count+=1;
                        }
                        union(rank,dp,((i+1)*grid.length+1)+j,(i*grid.length+1)+(j+1));
                    
                        }
            }
        }
        printing(dp);
        return count;
    }
}